name: build
on: [push, pull_request]

jobs:
  build_exe:
    runs-on: windows-2025
    steps:
    - uses: actions/checkout@v4 

    # 全局缓存配置
    - name: Cache Python dependencies
      uses: actions/cache@v4
      id: cache-pip
      with:
        path: |
          ~\AppData\Local\pip\Cache
          ~\AppData\Local\nuitka\Cache
          ~\.cache\pip
          ~\.cache\nuitka
        key: ${{ runner.os }}-python-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Setup Python
      uses: actions/setup-python@v5.6.0
      with:
        python-version: 3.13.3
        cache: pip
        cache-dependency-path: requirements.txt  


    - name: Install Dependencies
      run: pip install -r requirements.txt
      # 仅在缓存未命中时显示完整输出
      if: steps.cache-pip.outputs.cache-hit != 'true'

    - name: Build exe with Nuitka
      run: |
        pip install -U nuitka
        mkdir -p build
        nuitka --jobs=4 --assume-yes-for-downloads --lto=yes --output-dir=build --onefile --standalone --enable-plugin=tk-inter --include-package=bs4 CSDemoDownloader.py
      # env:
      #   # 启用Nuitka编译缓存
      #   NUITKA_CACHE_DIR: ~\AppData\Local\nuitka\Cache
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuitka-build
        path: build
        retention-days: 1  # 临时存储

  
  publish_release:
    needs: [build_exe]  # 依赖构建任务
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # 仅在push事件触发
    permissions:
      contents: write  # 需要写入权限发布Release
    steps:
    - uses: actions/checkout@v4
    
    # 下载构建产物
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: nuitka-build
        path: build

    # 获取短SHA
    - name: Extract Short SHA
      run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
    
    - name: Generate Release Notes
      run: |
        echo "- ${{ github.event.head_commit.message }}" > release_notes.md
        echo "Commit: ${{ env.SHORT_SHA }}" >> release_notes.md
        echo "###### 由 GitHub Actions 自动生成" >> release_notes.md

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: Build-${{ env.SHORT_SHA }}
        name: "Build ${{ env.SHORT_SHA }}"
        body_path: release_notes.md
        files: |
          build/*.exe
        draft: false
        prerelease: true
